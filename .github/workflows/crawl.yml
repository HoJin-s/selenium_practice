name: Scheduled Crawler

on:
  schedule:
    - cron: "0 22 * * *" # 오전 7:00 (KST)
    - cron: "0 8 * * *" # 오후 5:00 (KST)
  workflow_dispatch: # 수동 실행도 가능 : GitHub Actions → Schedule Crawler → Run workflow 눌러서 즉시 테스트 가능

jobs:
  crawl:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Setup Chrome
        run: |
          sudo apt update
          sudo apt install -y wget unzip
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome-stable_current_amd64.deb

      - name: Print current UTC time
        run: date -u

      - name: Run crawler with logging
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
        run: |
          cd backend
          mkdir -p logs
          TIMESTAMP=$(date -u +'%Y-%m-%dT%H-%M-%SZ')

          if python selenium_practice/parser.py > temp_output.txt 2>&1; then
            LOG_FILE="logs/crawler_log_${TIMESTAMP}_✔️[SUCCESS]✔️.txt"
            echo "✔️ 크롤링 성공 (UTC: $TIMESTAMP)" > $LOG_FILE
          else
            LOG_FILE="logs/crawler_log_${TIMESTAMP}_❌[FAIL]❌.txt"
            echo "❌ 크롤링 실패 (UTC: $TIMESTAMP)" > $LOG_FILE
          fi

          cat temp_output.txt >> $LOG_FILE
          rm temp_output.txt

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: crawler-logs
          path: backend/logs/
